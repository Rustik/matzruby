Language Spec.

* %w(a\ b\ c abc) => ["a b c", "abc"]
* package or access control for global variables
* named arguments like foo(nation:="german") or foo(nation: "german").
* method to retrieve argument information (need new C API)
* multiple return values, yield values.  maybe incompatible
* cascading method invocation ???
* def Class#method .. end ??
* class Foo::Bar<Baz .. end, module Boo::Bar .. end

Hacking Interpreter

* non-blocking open (e.g. named pipe) for thread
* avoid blocking with gethostbyname/gethostbyaddr
* objectify interpreters
* remove rb_eval() recursions
* syntax tree -> bytecode ???
* scrambled script, or script filter
* setuid ruby

Standard Libraries

* String#scanf(?)
* Object#fmt(?)
* Integer[num], Float[num] (String[str]?, Array[obj]??)
* method to detect non-number trailer for to_i/to_f.
* Stream or Port, abstract superclass of IO ?
* String#{pred,prev}, String#downto
* optional stepsize argument for succ()

Extension Libraries

* FastCGI ruby
* ptk.rb pTk wrapper that is compatible to tk.rb

Ruby Libraries

* maillib {pop3,smtp}
* httplib.rb, urllib.rb, nttplib.rb, etc.
* format like perl's

Tools

* extension library maker like XS or SWIG
* freeze or undump to bundle everything

Misc

* publish Ruby books
